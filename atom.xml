<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>方山子</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-12-24T00:28:52.419Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>方山子</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Cisco Packet Tracer 实验</title>
    <link href="http://example.com/2021/12/22/Cisco_Packet_Tracer%E5%AE%9E%E9%AA%8C/"/>
    <id>http://example.com/2021/12/22/Cisco_Packet_Tracer%E5%AE%9E%E9%AA%8C/</id>
    <published>2021-12-22T11:31:03.434Z</published>
    <updated>2021-12-24T00:28:52.419Z</updated>
    
    <content type="html"><![CDATA[<h2 id="直接连接两台-PC-构建-LAN"><a href="#直接连接两台-PC-构建-LAN" class="headerlink" title="直接连接两台 PC 构建 LAN"></a>直接连接两台 PC 构建 LAN</h2><p>将两台 PC 直接连接构成一个网络。注意：直接连接需使用交叉线。<br>先选择两台PC，然后连接起来，如图所示<br><img src="https://img-blog.csdnimg.cn/0622940d7a2647868f9feda789573988.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_19,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>接着分别对两台PC设置IP地址。设置PC6的IP地址：192.168.0.7，PC7的IP地址：192.168.0.8.设置好ip地址之后，尝试ping一下，能ping通则成功。<br>先点击PC6,然后选择command</p><span id="more"></span><p><img src="https://img-blog.csdnimg.cn/1e756ea6fb804bf2a5b32573b9154b24.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/27703864d4d7437d9908c0ceb305d32c.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/275087f769304d2095a39a80bdaee3cd.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>说明网络连接配置成功</p><h2 id="用交换机构建-LAN"><a href="#用交换机构建-LAN" class="headerlink" title="用交换机构建 LAN"></a>用交换机构建 LAN</h2><p>构建如下拓扑结构的局域网<br><img src="https://img-blog.csdnimg.cn/e6e5932f18644a578acc31d1272ac03b.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>各PC的基本网络配置如下表<br>机器名 | IP      | 子网掩码<br>——– | —– | ——<br>PC0  | 192.168.1.1|255.255.255.0<br>PC1  | 192.168.1.2    |255.255.255.0<br>PC2  | 192.168.2.1|255.255.255.0<br>PC3  | 192.168.2.2|255.255.255.0</p><p>首先按照上图构建拓扑局域网，构建结果如下所示:<br><img src="https://img-blog.csdnimg.cn/3f1acb549f884420bc806f5580525338.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>然后点击每一个PC端设置IP地址。</p><h3 id="✎-问题一"><a href="#✎-问题一" class="headerlink" title="✎ 问题一"></a>✎ 问题一</h3><p>验证PC0 能否 ping 通 PC1、PC2、PC3<br><img src="https://img-blog.csdnimg.cn/151547b433d947049c2216546d3417b8.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>从上面的结果可以看到，PC0可以ping通PC1，但是不能ping通PC2和PC3。即使是PC终端可以ping通和它在同一个交换机下的其他PC终端</p><h3 id="✎-问题二"><a href="#✎-问题二" class="headerlink" title="✎ 问题二"></a>✎ 问题二</h3><p>PC3 能否 ping 通 PC0、PC1、PC2 ，为什么？</p><p>PC3不能ping通PC0和PC1，但是可以ping通PC2，因为PC1和PC0不和PC3在同一个交换机下，而PC2和PC3在同一个交换机下面。结果如图所示<br><img src="https://img-blog.csdnimg.cn/8475732ebc634edb8b6b8b4c39b1440b.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="✎-问题三"><a href="#✎-问题三" class="headerlink" title="✎ 问题三"></a>✎ 问题三</h3><p>将 4 台 PC 的掩码都改为 255.255.0.0 ，它们相互能 ping 通吗？为什么？<br>结果如下<br><img src="https://img-blog.csdnimg.cn/480c24e2848b424fb40dd398f46e0926.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="✎-问题四"><a href="#✎-问题四" class="headerlink" title="✎ 问题四"></a>✎ 问题四</h3><p>使用二层交换机连接的网络需要配置网关吗？为什么？</p><p>需要配置网关。因为只有设置了网关，在发送数据的时候，交换机才会知道如何转发数据包，即是发送到对方网关。</p><h3 id="✎-试一试"><a href="#✎-试一试" class="headerlink" title="✎ 试一试"></a>✎ 试一试</h3><p>集线器 Hub 是工作在物理层的多接口设备，它与交换机的区别有以下两点：</p><blockquote><ol><li><p>从OSI体系结构来看，集线器属于OSI第一层物理层设备，而交换机属于OSI的第二层数据链路层设备。集线器只是对数据的传输起到同步、放大和整形的作用，对数据传输中的短帧、碎片等无法进行有效的处理，不能保证数据传输的完整性和正确性；而交换机不但可以对数据的传输做到同步、放大和整形，而且可以过虑短帧、碎片等。</p></li><li><p>从工作方式来看，集线器是一种广播模式，也就是说集线器的某个端口工作的时候，其他所有端口都能够收听到信息，容易产生广播风暴，当网络较大时网络性能会受到很大的影响。而交换机就能够避免这种现象，当交换机工作的事后，只有发出请求的端口和目的端口之间相互相应而不影响其它端口，因此交换机就能够隔离冲突并有效的抑制广播风暴的产生。</p></li></ol></blockquote><h2 id="交换机接口地址列表"><a href="#交换机接口地址列表" class="headerlink" title="交换机接口地址列表"></a>交换机接口地址列表</h2><p>二层交换机是一种即插即用的多接口设备，它对于收到的帧有 3 种处理方式：广播、转发和丢弃（请弄清楚何时进行何种操作）。那么，要转发成功，则交换机中必须要有接口地址列表即 MAC 表，该表是交换机通过学习自动得到的！</p><p>仍然构建上图的拓扑结构，并配置各计算机的 IP 在同一个一个子网，使用工具栏中的放大镜点击某交换机如左边的 Switch3，选择 MAC Table，可以看到最初交换机的 MAC 表是空的，也即它不知道该怎样转发帧（那么它将如何处理？），用 PC0 访问（ping）PC1 后，再查看该交换机的 MAC 表，现在有相应的记录，请思考如何得来。随着网络通信的增加，各交换机都将生成自己完整的 MAC 表，此时交换机的交换速度就是最快的！<br><img src="https://img-blog.csdnimg.cn/94efd86939194a89819d1a13cbaee7f0.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="📬-秘籍"><a href="#📬-秘籍" class="headerlink" title="📬 秘籍"></a>📬 秘籍</h3><blockquote><p>你还可以使用 CPT 的 Simulation 模式即模拟方式进一步看清楚这个过程！</p></blockquote><h2 id="生成树协议"><a href="#生成树协议" class="headerlink" title="生成树协议"></a>生成树协议</h2><p>交换机在目的地址未知或接收到广播帧时是要进行广播的。如果交换机之间存在回路/环路，那么就会产生广播循环风暴，从而严重影响网络性能。</p><p>而交换机中运行的 STP 协议能避免交换机之间发生广播循环风暴。</p><p>只使用交换机，构建如下拓扑<br><img src="https://img-blog.csdnimg.cn/4f378380dc7a4168b9ea78a9c6976cd7.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_16,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>这是初始时的状态。我们可以看到交换机之间有回路，这会造成广播帧循环传送即形成广播风暴，严重影响网络性能。</p><p>随后，交换机将自动通过生成树协议（STP）对多余的线路进行自动阻塞（Blocking），以形成一棵以 Switch4 为根（具体哪个是根交换机有相关的策略）的具有唯一路径树即生成树！</p><p>经过一段时间，随着 STP 协议成功构建了生成树后，Switch5 的两个接口当前物理上是连接的，但逻辑上是不通的，处于Blocking状态（桔色）如下图所示<br><img src="https://img-blog.csdnimg.cn/cad826fea2794b5c963ed489d138d34f.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_17,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>在网络运行期间，假设某个时候 Switch1与 Switch2 之间的物理连接出现问题（将 Switch1 与 Switch2 的连线剪掉），则该生成树将自动发生变化。Switch1上方先前 Blocking 的那个接口现在活动了（绿色），但下方那个接口仍处于 Blocking 状态（桔色）。如下图所示<br><img src="https://img-blog.csdnimg.cn/5c856031b3464568b2f425aa48d269dc.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>交换机的 STP 协议即生成树协议始终自动保证交换机之间不会出现回路，从而形成广播风暴</p><h3 id="📬-秘籍-1"><a href="#📬-秘籍-1" class="headerlink" title="📬 秘籍"></a>📬 秘籍</h3><blockquote><p>你还可以使用 CPT 的 Simulation 模式即模拟方式进一步看清楚这个过程</p></blockquote><p>！</p><h2 id="路由器配置初步"><a href="#路由器配置初步" class="headerlink" title="路由器配置初步"></a>路由器配置初步</h2><p>我们模拟重庆交通大学和重庆大学两个学校的连接，构建如下拓扑：<br><img src="https://img-blog.csdnimg.cn/c0aac760d6804b008578858a5da48375.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>说明一</p><p>交通大学与重庆大学显然是两个不同的子网。在不同子网间通信需通过路由器。<br>路由器的每个接口下至少是一个子网，图中我们简单的规划了 3 个子网：<br>左边路由器是交通大学的，其下使用交换机连接交通大学的网络，分配网络号 192.168.1.0/24，该路由器接口也是交通大学网络的网关，分配 IP 为 192.168.1.1<br>右边路由器是重庆大学的，其下使用交换机连接重庆大学的网络，分配网络号 192.168.3.0/24，该路由器接口也是重庆大学网络的网关，分配 IP 为 192.168.3.1<br>两个路由器之间使用广域网接口相连，也是一个子网，分配网络号 192.168.2.0/24</p><p>说明二</p><p>现实中，交通大学和重庆大学的连接是远程的。该连接要么通过路由器的光纤接口，要么通过广域网接口即所谓的 serial 口（如拓扑图所示）进行，一般不会通过双绞线连接。<br>下面我们以通过路由器的广域网口连接为例来进行相关配置。请注意：我们选用的路由器默认没有广域网模块（名称为 WIC-1T 等），需要关闭路由器后添加，然后再开机启动。</p><p>说明三</p><p>在模拟的广域网连接中需注意 DCE 和 DTE 端（连线时线路上有提示，带一个时钟标志的是 DCE 端。有关 DCE 和 DTE 的概念请查阅相关资料。），在 DCE 端需配置时钟频率 64000</p><p>说明四</p><p>路由器有多种命令行配置模式，每种模式对应不同的提示符及相应的权限。<br>请留意在正确的模式下输入配置相关的命令。</p><p>User mode：用户模式<br>Privileged mode：特权模式<br>Global configuration mode：全局配置模式<br>Interface mode：接口配置模式<br>Subinterface mode：子接口配置模式</p><p>说明五</p><p>在现实中，对新的路由器，显然不能远程进行配置，我们必须在现场通过笔记本的串口与路由器的 console 接口连接并进行初次的配置（注意设置比特率为9600）后，才能通过网络远程进行配置。这也是上图左上画出笔记本连接的用意。</p><p>说明六</p><p>在路由器的 CLI 界面中，可看到路由器刚启动成功后，因为无任何配置，将会提示是否进行对话配置（Would you like to enter the initial configuration dialog?），因其步骤繁多，请选择 NO</p><h3 id="🗣-注意"><a href="#🗣-注意" class="headerlink" title="🗣 注意"></a>🗣 注意</h3><blockquote><p>在我们的实验中可不进行如下的配置，但在现实中为了安全，以下的登录及特权密码等配置是必须的，否则每个人都可操作你的路由器或交换机！</p></blockquote><p>比如交通大学路由器的初步配置可以如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#interface FastEthernet0/0</span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#ip address 192.168.1.1 255.255.255.0</span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#no shutdown</span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#<span class="meta-keyword">line</span> vty 0 4 <span class="comment">//可支持0-4共5个终端同时登录</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-line)<span class="meta">#password dswybs <span class="comment">// 远程登录密码</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-line)<span class="meta">#login</span></span><br><span class="line"><span class="built_in">Router</span>(config-line)<span class="meta">#exit</span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#enable password dswybs <span class="comment">// 特权模式密码</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)#^Z  <span class="comment">// 退出</span></span><br></pre></td></tr></table></figure><p>拓扑图中路由器各接口配置数据如下<br>接口名 | IP      | 子网掩码<br>——– | —– | ——<br>交通大学 Router2 以太网口  | 192.168.1.1|255.255.255.0<br>交通大学 Router2 广域网口  | 192.168.2.1    |255.255.255.0<br>交通大学 Router2 以太网口  | 192.168.3.1|255.255.255.0<br>交通大学 Router2 广域网口  | 192.168.2.2|255.255.255.0</p><table><thead><tr><th>节点名</th><th>IP</th><th>子网掩码</th><th>网关</th></tr></thead><tbody><tr><td>交通大学 PC0</td><td>192.168.1.2</td><td>255.255.255.0</td><td>192.168.1.1</td></tr><tr><td>交通大学 PC1</td><td>192.168.1.3</td><td>255.255.255.0</td><td>192.168.1.1</td></tr><tr><td>交通大学 PC2</td><td>192.168.3.2</td><td>255.255.255.0</td><td>192.168.1.1</td></tr><tr><td>交通大学 PC3</td><td>192.168.3.3</td><td>255.255.255.0</td><td>192.168.1.1</td></tr></tbody></table><p>交通大学路由器基本配置如下：<br>以太网口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;enable   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#configure terminal   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#interface f0/0   <span class="comment">// 进入配置以太网口模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#ip address 192.168.1.1 255.255.255.0   <span class="comment">// 配置该接口的 IP</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#no shutdown   <span class="comment">// 激活接口</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)#^z   <span class="comment">// 直接退到特权模式</span></span><br><span class="line">Router#</span><br></pre></td></tr></table></figure><p>广域网口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#int s0/0   <span class="comment">// 进入配置广域网口模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#ip address 192.168.2.1 255.255.255.0   <span class="comment">//配置该接口的 IP</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#clock rate 64000    <span class="comment">// 其为 DCE 端，配置时钟频率</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#no shutdown   <span class="comment">// 激活接口</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)#^z   <span class="comment">// 直接退到特权模式</span></span><br><span class="line">Router#</span><br></pre></td></tr></table></figure><p>重庆大学路由器基本配置如下：<br>以太网口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#int f0/0   <span class="comment">// 进入配置以太网口模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#ip address 192.168.3.1 255.255.255.0   <span class="comment">// 配置该接口的 IP</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#no shutdown   <span class="comment">// 激活接口</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)#^z   <span class="comment">// 直接退到特权模式</span></span><br><span class="line">Router#</span><br></pre></td></tr></table></figure><p>广域网口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#int s0/0   <span class="comment">// 进入配置广域网口模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#ip address 192.168.2.2 255.255.255.0   <span class="comment">//配置该接口的 IP</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#no shutdown   <span class="comment">// 激活接口</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)#^z   <span class="comment">// 直接退到特权模式</span></span><br><span class="line">Router#</span><br></pre></td></tr></table></figure><p>至此，路由器基本的配置完成。请按照上面 PC 配置表继续配置各个 PC 。</p><h3 id="✎-问题"><a href="#✎-问题" class="headerlink" title="✎ 问题"></a>✎ 问题</h3><p>现在交通大学内的各 PC 及网关相互能 ping 通，重庆大学也类似。但不能从交大的 PC ping 通重大的 PC，反之亦然，也即不能跨子网。为什么？</p><p>由于两所大学内的各个PC在不同的路由器，其网段不同，所以不能相互ping通。</p><h2 id="静态路由"><a href="#静态路由" class="headerlink" title="静态路由"></a>静态路由</h2><blockquote><p>静态路由是非自适应性路由协议，是由网络管理人员手动配置的，不能够根据网络拓扑的变化而改变。<br>因此，静态路由简单高效，适用于结构非常简单的网络。</p></blockquote><p>在当前这个简单的拓扑结构中我们可以使用静态路由，即直接告诉路由器到某网络该怎么走即可。</p><p>在前述路由器基本配置成功的情况下使用以下命令进行静态路由协议的配置：</p><p>交通大学路由器静态路由配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#ip route 192.168.3.0 255.255.255.0 192.168.2.2   <span class="comment">// 告诉交通大学路由器到 192.168.3.0 这个网络的下一跳是 192.168.2.2</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#exit   <span class="comment">//退到特权模式</span></span></span><br><span class="line">Router<span class="meta">#show ip route    <span class="comment">//查看路由表</span></span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/c91debf7ce57432da66b0a01d8f2e0a1.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><p>重庆大学路由器静态路由配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#ip route 192.168.1.0 255.255.255.0 192.168.2.1   <span class="comment">// 告诉重庆大学路由器到 192.168.1.0 这个网络的下一跳是 192.168.2.1</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#exit   <span class="comment">//退到特权模式</span></span></span><br><span class="line">Router<span class="meta">#show ip route    <span class="comment">//查看路由表</span></span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/fc1ccf84e8bf49338a14d46b1555a384.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_16,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><p>查看路由表你可看到标记为 S 的一条路由，S 表示 <code>Static</code> 。</p><p>至此，这些 PC 能全部相互 <code>ping</code> 通！<br>下面是交通大学的主机0<code>ping</code>重庆大学主机2<br><img src="https://img-blog.csdnimg.cn/be943d75d4674957aac70a91a24e38d2.png#pic_center" alt="在这里插入图片描述"></p><h3 id="🗣-注意-1"><a href="#🗣-注意-1" class="headerlink" title="🗣 注意"></a>🗣 注意</h3><p>我们的拓扑只模拟了 3 个网络。在现实中，路由器连接的网络数量非常多，我们还需要配置一条缺省路由，否则其它网络皆不能到达！当然，我们的拓扑可以不考虑。</p><p>Router(config)#ip route 0.0.0.0 0.0.0.0 <em>.</em>.<em>.</em> // 缺省全部转发给 <em>.</em>.<em>.</em> 这个IP</p><h2 id="动态路由-RIP"><a href="#动态路由-RIP" class="headerlink" title="动态路由 RIP"></a>动态路由 RIP</h2><blockquote><p>动态路由协议采用自适应路由算法，能够根据网络拓扑的变化而重新计算机最佳路由。</p><p>RIP 的全称是 Routing InformationProtocol，是距离矢量路由的代表（目前虽然淘汰，但可作为我们学习的对象）。<br>使用 RIP协议只需要告诉路由器直接相连有哪些网络即可，然后 RIP 根据算法自动构建出路由表。</p></blockquote><p>因为我们模拟的网络非常简单，因此不能同时使用静态和动态路由，否则看不出效果，所以我们需要把刚才配置的静态路由先清除掉。</p><p>清除静态路由配置：<br>直接关闭路由器电源。相当于没有保存任何配置，然后各接口再按照前面基本配置所述重新配置 IP 等参数（推荐此方法，可以再熟悉一下接口的配置命令）；<br>使用 <code>no</code> 命令清除静态路由。在全局配置模式下，交通大学路由器使用：<code>no ip route 192.168.3.0 255.255.255.0 192.168.2.2</code>，重庆大学路由器使用：<code>no ip route 192.168.1.0 255.255.255.0 192.168.2.1</code> 。相当于使用 <code>no</code> 命令把刚才配置的静态路由命令给取消。</p><p>交通大学路由器 RIP 路由配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#router rip   <span class="comment">// 启用 RIP 路由协议，注意是 router 命令</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)<span class="meta">#network 192.168.1.0   <span class="comment">// 网络 192.168.1.0 与我直连</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)<span class="meta">#network 192.168.2.0   <span class="comment">// 网络 192.168.2.0 与我直连</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)#^z   <span class="comment">//直接退到特权模式</span></span><br><span class="line">Router<span class="meta">#show ip route    <span class="comment">//查看路由表</span></span></span><br></pre></td></tr></table></figure><p>重庆大学路由器 RIP 路由配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#router rip   <span class="comment">// 启用RIP路由协议，注意是 router 命令</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)<span class="meta">#network 192.168.3.0   <span class="comment">// 网络 192.168.3.0 与我直连</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)<span class="meta">#network 192.168.2.0   <span class="comment">// 网络 192.168.2.0 与我直连</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)#^z   <span class="comment">//直接退到特权模式</span></span><br><span class="line">Router<span class="meta">#show ip route    <span class="comment">//查看路由表</span></span></span><br></pre></td></tr></table></figure><p>查看路由表你可看到标记为 <code>R</code> 的一条路由，<code>R</code> 表示 <code>RIP</code> 。<br>至此，这些 PC 也能全部相互 <code>ping</code> 通！</p><h3 id="📬-秘籍-2"><a href="#📬-秘籍-2" class="headerlink" title="📬 秘籍"></a>📬 秘籍</h3><blockquote><p>可以在特权模式下使用 <code>debug ip rip</code> 开启 RIP<br>诊断，此时会看到路由器之间不停发送的距离矢量信息，以判断网络状态是否发生改变从而更新路由表。该命令会不停的显示相关信息，打扰我们的输入，可使用<code>no debug ip rip</code> 关闭 RIP 诊断</p></blockquote><h2 id="动态路由-OSPF"><a href="#动态路由-OSPF" class="headerlink" title="动态路由 OSPF"></a>动态路由 OSPF</h2><blockquote><p>OSPF（Open Shortest Path First 开放式最短路径优先）是一个内部网关协议（Interior Gateway Protocol，简称 IGP）， 用于在单一自治系统（Autonomous System，AS）内决策路由。<br>OSPF 性能优于RIP，是当前域内路由广泛使用的路由协议。</p></blockquote><p>同样的，我们需要把刚才配置的 RIP 路由先清除掉。</p><p>清除 RIP 路由配置：<br>直接关闭路由器电源。相当于没有保存任何配置，然后各接口再按照前面基本配置所述重新配置 IP 等参数<br>使用 <code>no</code> 命令清除 RIP 路由。在全局配置模式下，各路由器都使用：<code>no router rip</code> 命令进行清除</p><p>交通大学路由器 OSPF 路由配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#router ospf 1   <span class="comment">// 启用 OSPF 路由协议，进程号为1（可暂不理会进程号概念）</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)<span class="meta">#network 192.168.1.0 0.0.0.255 area 0   <span class="comment">// 自治域0中的属于 192.168.1.0/24 网络的所有主机（反向掩码）参与 OSPF</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)<span class="meta">#network 192.168.2.0 0.0.0.255 area 0   <span class="comment">// 自治域0中的属于 192.168.2.0/24 网络的所有主机（反向掩码）参与 OSPF</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)#^z   <span class="comment">//直接退到特权模式</span></span><br><span class="line">Router<span class="meta">#show ip route    <span class="comment">//查看路由表</span></span></span><br></pre></td></tr></table></figure><p>重庆大学路由器 OSPF 路由配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#router ospf 1   <span class="comment">// 启用 OSPF 路由协议，进程号为1</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)<span class="meta">#network 192.168.3.0 0.0.0.255 area 0   <span class="comment">// 自治域0中的属于 192.168.3.0/24 网络的所有主机（反向掩码）参与 OSPF</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)<span class="meta">#network 192.168.2.0 0.0.0.255 area 0   <span class="comment">// 自治域0中的属于 192.168.2.0/24 网络的所有主机（反向掩码）参与 OSPF</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)#^z   <span class="comment">//直接退到特权模式</span></span><br><span class="line">Router<span class="meta">#show ip route    <span class="comment">//查看路由表</span></span></span><br></pre></td></tr></table></figure><p>查看路由表你可看到标记为 O 的一条路由，O 表示 OSPF 。</p><p>至此，这些 PC 能全部相互 <code>ping</code> 通！<br><img src="https://img-blog.csdnimg.cn/802f9d149ce1472797441c74fc952ee3.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="📬-秘籍-3"><a href="#📬-秘籍-3" class="headerlink" title="📬 秘籍"></a>📬 秘籍</h3><blockquote><p>可以在特权模式下使用 <code>debug ip ospf events</code> 开启 OSPF 诊断（<code>no debug ip ospf events</code>关闭诊断）， 可看到路由器之间发送的 Hello 信息用以诊断当前的链路是否发生改变以便进行路由调整（事件触发而非定时更新！）。</p></blockquote><h3 id="🗣-反向掩码"><a href="#🗣-反向掩码" class="headerlink" title="🗣 反向掩码"></a>🗣 反向掩码</h3><blockquote><p>我们常见的子网掩码是所谓的正向掩码，用连续的 <code>1</code> 和 <code>0</code> 来表示，其中 <code>1</code> 表示需精确匹配， <code>0</code> 则无需，以此得到网络号。<br>类似的，反向掩码也使用连续的 <code>1</code> 和 <code>0</code> 来表示，但相反，其中 <code>0</code> 表示需精确匹配， <code>1</code> 则无需，以此得到相关的 IP，主要用于 OSPF中。<br>还有一个通配符掩码，也采用与反向掩码相似的规则，主要用于访问控制列表 ACL 中。</p></blockquote><h2 id="基于端口的网络地址翻译-PAT"><a href="#基于端口的网络地址翻译-PAT" class="headerlink" title="基于端口的网络地址翻译 PAT"></a>基于端口的网络地址翻译 PAT</h2><blockquote><p>网络地址转换（NAT，Network Address Translation）被各个 Internet 服务商即 ISP广泛应用于它们的网络中，也包括 WiFi 网络。<br> 原因很简单，NAT 不仅完美地解决了 lP地址不足的问题，而且还能够有效地避免来自网络外部的攻击，隐藏并保护网络内部的计算机。</p></blockquote><p>NAT 的实现方式一般有三种：</p><ol><li>静态转换： Static NAT</li><li>动态转换： Dynamic NAT</li><li>端口多路复用： OverLoad</li></ol><p>端口多路复用使用最多也最灵活。OverLoad 是指不仅改变发向 Internet 数据包的源 IP 地址，同时还改变其源端口，即进行了端口地址转换（PAT，Port Address Translation）。</p><p>采用端口多路复用方式，内部网络的所有主机均可共享一个合法外部 IP 地址实现对 Internet 的访问，从而可以最大限度地节约IP地址资源。 同时，又可隐藏网络内部的所有主机，有效避免来自 Internet 的攻击。因此，目前网络中应用最多的就是端口多路复用方式。</p><p>我们仍然使用重庆交通大学和重庆大学两个学校的拓扑进行 PAT 实验。我们需要保证两个学校的路由已经配置成功，无论使用静态路由还是动态路由，以下我们给出完整的配置过程：设定这两个学校的路由器使用 OSPF 协议，模拟交通大学使用内部 IP 地址（<code>192.168.1.0/24</code>），模拟重庆大学使用外部 IP 地址（<code>8.8.8.0/24</code>），两个路由器之间使用外部 IP 地址（<code>202.202.240.0/24</code>），在交通大学的出口位置即广域网口实施 PAT。</p><p>拓扑图中各 PC 配置数据如下：<br><img src="https://img-blog.csdnimg.cn/f18d26fcdd664370b155e67caff6f6e9.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_14,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="🗣"><a href="#🗣" class="headerlink" title="🗣"></a>🗣</h3><blockquote><p>请留意重庆大学两个 PC 的网络配置发生改变，我们模拟为外部/公网 IP 地址！</p></blockquote><p>拓扑图中路由器各接口配置数据如下：<br><img src="https://img-blog.csdnimg.cn/19466adc4a284b2e855a8e83bc324d4e.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="🗣-1"><a href="#🗣-1" class="headerlink" title="🗣"></a>🗣</h3><blockquote><p>请留意重庆大学路由器两个接口及交通大学广域网口的网络配置发生改变，然后配置 <strong>OSPF</strong> 路由，最后在交通大学路由器的广域网口实施 <strong>PAT</strong>！</p></blockquote><p>交通大学路由器接口配置如下：<br>以太网口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#int f0/0   <span class="comment">// 进入配置以太网口模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#ip address 192.168.1.1 255.255.255.0   <span class="comment">// 配置 IP</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#no shutdown   <span class="comment">// 激活接口</span></span></span><br></pre></td></tr></table></figure><p>广域网口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#int s0/0   <span class="comment">// 进入配置广域网口模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#ip address 202.202.240.1 255.255.255.0   <span class="comment">//配置 IP</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#clock rate 64000    <span class="comment">// 其为 DCE 端，配置时钟频率</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#no shutdown   <span class="comment">// 激活接口</span></span></span><br></pre></td></tr></table></figure><p>重庆大学路由器接口配置如下：<br>以太网口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#int f0/0   <span class="comment">// 进入配置以太网口模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#ip address 8.8.8.1 255.255.255.0   <span class="comment">// 配置 IP</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#no shutdown   <span class="comment">// 激活接口</span></span></span><br></pre></td></tr></table></figure><p>广域网口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#int s0/0   <span class="comment">// 进入配置广域网口模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#ip address 202.202.240.2 255.255.255.0   <span class="comment">// 配置 IP</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#no shutdown   <span class="comment">// 激活接口</span></span></span><br></pre></td></tr></table></figure><p>交通大学路由器 OSPF 路由配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#router ospf 1   <span class="comment">// 启用 OSPF 路由协议，进程号为1（可暂不理会进程号概念）</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)<span class="meta">#network 192.168.1.0 0.0.0.255 area 0   <span class="comment">// 自治域0中的属于192.168.1.0/24网络的所有主机（反向掩码）参与 OSPF</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)<span class="meta">#network 202.202.240.0 0.0.0.255 area 0   <span class="comment">// 自治域0中的属于202.202.240.0/24网络的所有主机（反向掩码）参与 OSPF</span></span></span><br></pre></td></tr></table></figure><p>重庆大学路由器 OSPF 路由配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#router ospf 1   <span class="comment">// 启用 OSPF 路由协议，进程号为1</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)<span class="meta">#network 202.202.240.0 0.0.0.255 area 0   <span class="comment">// 自治域0中的属于202.202.240.0/24网络的所有主机（反向掩码）参与 OSPF</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-router)<span class="meta">#network 8.8.8.0 0.0.0.255 area 0   <span class="comment">// 自治域0中的属于8.8.8.0/24网络的所有主机（反向掩码）参与 OSPF</span></span></span><br></pre></td></tr></table></figure><p>此时，这些 PC 能全部相互 <code>ping</code> 通！如在交通大学内部使用 PC0（<code>192.168.1.2</code>）来 ping 重庆大学的PC2（<code>8.8.8.2</code>）应该成功。</p><p>下面我们将重庆大学的路由器看着 Internet 中的骨干路由器，那么这些路由器将不会转发内部/私有 IP 地址的包（直接丢弃）。我们通过在重庆大学路由器上实施访问控制 ACL ，即丢弃来自交通大学（私有 IP 地址）的包来模拟这个丢包的过程。</p><p>重庆大学路由器丢包的配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#access-list 1 deny 192.168.1.0 0.0.0.255  <span class="comment">// 创建 ACL 1，丢弃/不转发来自 192.168.1.0/24 网络的所有包</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#access-list 1 permit any  <span class="comment">// 添加 ACL 1 的规则，转发其它所有网络的包</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#int s0/0   <span class="comment">// 配置广域网口</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#ip access-group 1 in  <span class="comment">// 在广域网口上对进来的包实施 ACL 1 中的规则，实际就是广域网口如果收到来自 192.168.1.0/24 IP的包即丢弃</span></span></span><br></pre></td></tr></table></figure><p>此时，再使用交通大学内部的 PC0（<code>192.168.1.2</code>）来 <code>ping</code> 重庆大学的 PC2（<code>8.8.8.2</code>）就不成功了，会显示目的主机不可到达（<code>Destination</code> <code>host</code> <code>unreachable</code>）信息。</p><h3 id="📬-秘籍-4"><a href="#📬-秘籍-4" class="headerlink" title="📬 秘籍"></a>📬 秘籍</h3><blockquote><p><code>ping</code> 的同时，在 CPT 软件中使用模拟（<code>Simulation</code>）方式会看得非常清楚：重庆大学路由器的广域网口将来自交通大学的包丢弃了！</p></blockquote><p>下面，我们就开始实施 PAT。即：我们将会在交通大学路由器的出口上将内部/私有 IP 地址转换为外部/公开 IP，从而包的源 IP 发生了改变，就不会被重庆大学路由器丢弃，因此网络连通。</p><p>交通大学路由器 <strong>PAT</strong> 配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en   <span class="comment">// 从普通模式进入特权模式</span></span><br><span class="line">Router<span class="meta">#conf t   <span class="comment">// 进入全局配置模式</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#access-list 1 permit 192.168.1.0 0.0.0.255  <span class="comment">// 创建 ACL 1，允许来自 192.168.1.0/24 网络的所有包</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#ip nat inside source list 1 interface s0/0 overload  <span class="comment">// 来自于 ACL 中的 IP 将在广域网口实施 PAT</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#int f0/0   <span class="comment">// 配置以太网口</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#ip nat inside   <span class="comment">// 配置以太网口为 PAT 的内部</span></span></span><br><span class="line"><span class="built_in">Router</span>(config)<span class="meta">#int s0/0   <span class="comment">// 配置广域网口</span></span></span><br><span class="line"><span class="built_in">Router</span>(config-<span class="keyword">if</span>)<span class="meta">#ip nat outside   <span class="comment">// 配置广域网口为 PAT 的外部</span></span></span><br></pre></td></tr></table></figure><p>现在，再次使用交通大学内部的 PC0（<code>192.168.1.2</code>）来 <code>ping</code> 重庆大学的PC2（<code>8.8.8.2</code>）则OK。</p><h3 id="📬-秘籍-5"><a href="#📬-秘籍-5" class="headerlink" title="📬 秘籍"></a>📬 秘籍</h3><blockquote><p><code>ping</code> 成功后，在交通大学路由器特权配置模式下使用 <code>show ip nat translations</code> 可查看这个翻译的过程！</p></blockquote><h2 id="虚拟局域网-VLAN"><a href="#虚拟局域网-VLAN" class="headerlink" title="虚拟局域网 VLAN"></a>虚拟局域网 VLAN</h2><p>在实际网络中（如我校的网络），你可看到路由器一般位于网络的边界，而内部几乎全部使用交换机连接。</p><p>前面我们分析过，交换机连接的是同一个子网！ 显然，在这样一个大型规模的子网中进行广播甚至产生广播风暴将严重影响网络性能甚至瘫痪。</p><p>另外我们也已经知道，其实学校是划分了 N 多个子网的，那么这些交换机连接的就绝不是一个子网！这样矛盾的事情该如何解释呢？我们实际上使用了支持 VLAN 的交换机！而前述的交换机只是普通的 2 层交换机（或者我们把它当作 2 层交换机在使用。</p><p>VLAN（Virtual Local Area Network）即虚拟局域网。通过划分 VLAN，我们可以把一个物理网络划分为多个逻辑网段即多个子网。</p><p>划分 VLAN 后可以杜绝网络广播风暴，增强网络的安全性，便于进行统一管理等。</p><p>在 CPT 中构建如下图所示拓扑：<br><img src="https://img-blog.csdnimg.cn/bfb371103d654ff3aa42f34f909e3cf5.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>Cisco 2960 交换机是支持 VLAN 的交换机，共有 24 个 100M 和 2 个 1000M 以太网口。默认所有的接口都在 VLAN 1 中，故此时连接上来的计算机都处于同一 VLAN，可以进行通信。</p><p>下面我们就该交换机的 24 个 100M 接口分为 3 个部分，划分到 3 个不同的 VLAN 中，id 号分别设为 10、20、30，且设置别名（computer、communication、electronic）以利于区分和管理。</p><p>交换机 VLAN 配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt;en</span><br><span class="line">Switch<span class="meta">#conf t</span></span><br><span class="line"><span class="built_in">Switch</span>(config)<span class="meta">#vlan 10    <span class="comment">// 创建 id 为 10 的 VLAN（缺省的，交换机所有接口都属于VLAN 1，不能使用）</span></span></span><br><span class="line"><span class="built_in">Switch</span>(config-vlan)<span class="meta">#name computer    <span class="comment">// 设置 VLAN 的别名</span></span></span><br><span class="line"><span class="built_in">Switch</span>(config-vlan)<span class="meta">#exit</span></span><br><span class="line"><span class="built_in">Switch</span>(config)<span class="meta">#int vlan 10    <span class="comment">// 该 VLAN 为一个子网，设置其 IP，作为该子网网关</span></span></span><br><span class="line"><span class="built_in">Switch</span>(config-<span class="keyword">if</span>)<span class="meta">#ip address 192.168.0.1 255.255.255.0</span></span><br><span class="line"><span class="built_in">Switch</span>(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line"><span class="built_in">Switch</span>(config)<span class="meta">#vlan 20    <span class="comment">// 创建 id 为 20 的 VLAN</span></span></span><br><span class="line"><span class="built_in">Switch</span>(config-vlan)<span class="meta">#name communication    <span class="comment">//设置别名</span></span></span><br><span class="line"><span class="built_in">Switch</span>(config-vlan)<span class="meta">#exit</span></span><br><span class="line"><span class="built_in">Switch</span>(config)<span class="meta">#int vlan 20</span></span><br><span class="line"><span class="built_in">Switch</span>(config-<span class="keyword">if</span>)<span class="meta">#ip addr 192.168.1.1 255.255.255.0</span></span><br><span class="line"><span class="built_in">Switch</span>(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line"><span class="built_in">Switch</span>(config)<span class="meta">#vlan 30    <span class="comment">// 创建 id 为 20 的 VLAN</span></span></span><br><span class="line"><span class="built_in">Switch</span>(config-vlan)<span class="meta">#name electronic    <span class="comment">// 设置别名</span></span></span><br><span class="line"><span class="built_in">Switch</span>(config-vlan)<span class="meta">#exit</span></span><br><span class="line"><span class="built_in">Switch</span>(config)<span class="meta">#int vlan 30</span></span><br><span class="line"><span class="built_in">Switch</span>(config-<span class="keyword">if</span>)<span class="meta">#ip add 192.168.2.1 255.255.255.0</span></span><br><span class="line"><span class="built_in">Switch</span>(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line"><span class="built_in">Switch</span>(config)<span class="meta">#int range f0/1-8    <span class="comment">// 成组配置接口（1-8）</span></span></span><br><span class="line"><span class="built_in">Switch</span>(config-<span class="keyword">if</span>-range)<span class="meta">#switchport mode access    <span class="comment">// 设置为存取模式</span></span></span><br><span class="line"><span class="built_in">Switch</span>(config-<span class="keyword">if</span>-range)<span class="meta">#switchport access vlan 10    <span class="comment">// 划归到 VLAN 10 中</span></span></span><br><span class="line"><span class="built_in">Switch</span>(config-<span class="keyword">if</span>-range)<span class="meta">#exit</span></span><br><span class="line"><span class="built_in">Switch</span>(config)<span class="meta">#int range f0/9-16</span></span><br><span class="line"><span class="built_in">Switch</span>(config-<span class="keyword">if</span>-range)<span class="meta">#switchport mode access</span></span><br><span class="line"><span class="built_in">Switch</span>(config-<span class="keyword">if</span>-range)<span class="meta">#switchport access vlan 20</span></span><br><span class="line"><span class="built_in">Switch</span>(config-<span class="keyword">if</span>-range)<span class="meta">#exit</span></span><br><span class="line"><span class="built_in">Switch</span>(config)<span class="meta">#int range f0/17-24</span></span><br><span class="line"><span class="built_in">Switch</span>(config-<span class="keyword">if</span>-range)<span class="meta">#switchport mode access</span></span><br><span class="line"><span class="built_in">Switch</span>(config-<span class="keyword">if</span>-range)<span class="meta">#switchport access vlan 30</span></span><br><span class="line"><span class="built_in">Switch</span>(config-<span class="keyword">if</span>-range)#^Z</span><br><span class="line">Switch<span class="meta">#show vlan <span class="comment">// 查看 VLAN 的划分情况</span></span></span><br></pre></td></tr></table></figure><p>至此，在该交换机上我们就划分了 3 个 VLAN（不包括缺省的 VLAN 1）。</p><p>各 VLAN 下 PC 的网络配置及连接的交换机接口如下表：<br><img src="https://img-blog.csdnimg.cn/91c95d8f6e844f748bba6a07e380b1dc.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_19,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>此时可以使用 <code>ping</code> 命令进行测试，你会发现只有在同一 VLAN 中的 PC 才能通信，且广播也局限于该 <strong>VLAN</strong>。</p><h2 id="虚拟局域网管理-VTP"><a href="#虚拟局域网管理-VTP" class="headerlink" title="虚拟局域网管理 VTP"></a>虚拟局域网管理 VTP</h2><p>前一个实验我们在交换机上进行了 VLAN 的规划和划分。但在实际应用中，我们绝不允许在这些支持VLAN的交换机上进行随意的 VLAN 划分，如此将造成管理混乱！VLAN的划分必须得到统一的规划和管理，这就需要 VTP 协议。</p><blockquote><p>VTP（VLAN Trunk Protocol）即 VLAN 中继协议。VTP 通过 ISL 帧或 Cisco 私有 DTP 帧（可查阅相关资料了解）保持 VLAN 配置统一性，也被称为虚拟局域网干道协议，它是思科私有协议。 VTP统一管理、增加、删除、调整VLAN，自动地将信息向网络中其它的交换机广播。</p></blockquote><p>此外，VTP 减小了那些可能导致安全问题的配置，只要在 VTP Server 做相应设置，VTP Client 会自动学习 VTP Server 上的 VLAN 信息。</p><p>为演示 VTP，重新构建如下拓扑结构：<br><img src="https://img-blog.csdnimg.cn/88856db8f1ed4914a9eebe2f22a050e4.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="🗣-注意："><a href="#🗣-注意：" class="headerlink" title="🗣 注意："></a>🗣 注意：</h3><blockquote><p>作为干线，两个 2960 交换机和核心的 3560 交换机应该使用 Gbit 口相连。这虽然不是必须，但现实中这样连接性能最好。</p><p>3560 交换机是网络中的核心交换机，我们将其作为 VTP Server，VTP 域及 VLAN 将在其上创建和管理。</p><p>两个 2960 交换机是是局域网中的汇聚层/接入层交换机，将作为 VTP Client，可决定加入的 VTP 域和 VLAN。</p></blockquote><p>目前该网络都属于 <code>VLAN 1</code>，也即这些 PC 是可以相互通信的。前面说过，无论对于性能、管理还是安全等而言，现实中我们必须进行 VLAN 划分。</p><p>现在我们的要求是：新建两个 VLAN，然后让 PC0 和 PC1 属于 <code>VLAN 2</code>，PC1 和 PC3 属于 <code>VLAN 3</code>。</p><p>我们将在核心交换机 3560上进行如下工作：</p><p>设置为 <code>server</code> 模式，VTP 域为 <code>cqjtu</code><br>新建 <code>VLAN 2</code>，网络号 <code>192.168.1.0/24</code>，网关 <code>192.168.1.1</code><br>新建 <code>VLAN 3</code>，网络号 <code>192.168.2.0/24</code>，网关 <code>192.168.2.1</code></p><p>3560 VTP Server 配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt;en</span><br><span class="line">Switch<span class="meta">#conf t</span></span><br><span class="line"><span class="built_in">Switch</span>(config)<span class="meta">#hostname 3560    <span class="comment">// 更改交换机名称（可选）</span></span></span><br><span class="line"><span class="number">3560</span>(config)<span class="meta">#vtp domain cqjtu   <span class="comment">// 设置 VTP 域名称为 cqjtu</span></span></span><br><span class="line"><span class="number">3560</span>(config)<span class="meta">#vtp mode server    <span class="comment">// 设置其为 VTP 服务器模式</span></span></span><br><span class="line"><span class="number">3560</span>(config)<span class="meta">#vlan 2             <span class="comment">// 新建VLAN 2</span></span></span><br><span class="line"><span class="number">3560</span>(config-vlan)<span class="meta">#name computer <span class="comment">// 设置 VLAN 2 的别名（可选）</span></span></span><br><span class="line"><span class="number">3560</span>(config-vlan)<span class="meta">#exit</span></span><br><span class="line"><span class="number">3560</span>(config)<span class="meta">#vlan 3             <span class="comment">// 再建 VLAN 3</span></span></span><br><span class="line"><span class="number">3560</span>(config-vlan)<span class="meta">#name communication    <span class="comment">//设置 VLAN 2 的别名（可选）</span></span></span><br><span class="line"><span class="number">3560</span>(config-vlan)<span class="meta">#exit</span></span><br><span class="line"><span class="number">3560</span>(config)<span class="meta">#int vlan 2    <span class="comment">// 配置接口 VLAN 2，它将是该子网（左边）的网关</span></span></span><br><span class="line"><span class="number">3560</span>(config-<span class="keyword">if</span>)<span class="meta">#ip address 192.168.1.1 255.255.255.0</span></span><br><span class="line"><span class="number">3560</span>(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line"><span class="number">3560</span>(config)<span class="meta">#int vlan 3    <span class="comment">// 配置接口 VLAN 3，它将是该子网（右边）的网关</span></span></span><br><span class="line"><span class="number">3560</span>(config-<span class="keyword">if</span>)<span class="meta">#ip address 192.168.2.1 255.255.255.0</span></span><br></pre></td></tr></table></figure><p>我们将在左边交换机 2960A 上进行如下工作：</p><ol><li>加入名为 cqjtu 的 VTP 域</li><li>配置与核心交换机 3560 连接的千兆接口 g0/1 为 trunk 模式</li><li>将接口 f0/1 划分到 VLAN 2 中</li><li>将接口 f0/2 划分到 VLAN 3 中</li></ol><p>2960A（左边） VTP Client 配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt;en</span><br><span class="line">Switch<span class="meta">#conf t</span></span><br><span class="line"><span class="built_in">Switch</span>(config)<span class="meta">#hostname 2960A    <span class="comment">// 更改交换机名称（可选）</span></span></span><br><span class="line"><span class="number">2960</span>A(config)<span class="meta">#vtp domain cqjtu   <span class="comment">// 加入名为 cqjtu 的 VTP 域</span></span></span><br><span class="line"><span class="number">2960</span>A(config)<span class="meta">#vtp mode client    <span class="comment">// 设置模式为 VTP 客户</span></span></span><br><span class="line"><span class="number">2960</span>A(config)<span class="meta">#int g0/1    <span class="comment">// 配置与核心交换机 3560 连接的 g0/1 千兆接口</span></span></span><br><span class="line"><span class="number">2960</span>A(config-<span class="keyword">if</span>)<span class="meta">#switchport mode trunk    <span class="comment">// 设置该接口为中继（trunk）模式</span></span></span><br><span class="line"><span class="number">2960</span>A(config-<span class="keyword">if</span>)<span class="meta">#switchport trunk allowed vlan all  <span class="comment">// 允许为所有的 VLAN 中继</span></span></span><br><span class="line"><span class="number">2960</span>A(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line"><span class="number">2960</span>A(config)<span class="meta">#int f0/1    <span class="comment">// 配置接口 1</span></span></span><br><span class="line"><span class="number">2960</span>A(config-<span class="keyword">if</span>)<span class="meta">#switchport mode access    <span class="comment">// 设置该接口为正常访问模式</span></span></span><br><span class="line"><span class="number">2960</span>A(config-<span class="keyword">if</span>)<span class="meta">#switchport access vlan 2  <span class="comment">// 将接口划分到 VLAN 2</span></span></span><br><span class="line"><span class="number">2960</span>A(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line"><span class="number">2960</span>A(config)<span class="meta">#int f0/2    <span class="comment">// 配置接口 2</span></span></span><br><span class="line"><span class="number">2960</span>A(config-<span class="keyword">if</span>)<span class="meta">#switchport mode access    <span class="comment">// 设置该接口为正常访问模式</span></span></span><br><span class="line"><span class="number">2960</span>A(config-<span class="keyword">if</span>)<span class="meta">#switchport access vlan 3  <span class="comment">// 将接口划分到 VLAN 3</span></span></span><br></pre></td></tr></table></figure><p>我们将在右边交换机 2960B 上进行同样的工作：</p><ol><li>加入名为 cqjtu VTP 域</li><li>配置与核心交换机 3560 连接的千兆接口 g0/1 为 trunk 模式</li><li>将接口 f0/1 划分到 VLAN 2 中</li><li>将接口 f0/2 划分到 VLAN 3 中</li></ol><p>2960B（右边） VTP Client 配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt;en</span><br><span class="line">Switch<span class="meta">#conf t</span></span><br><span class="line"><span class="built_in">Switch</span>(config)<span class="meta">#hostname 2960B    <span class="comment">// 更改交换机名称（可选）</span></span></span><br><span class="line"><span class="number">2960B</span>(config)<span class="meta">#vtp domain cqjtu   <span class="comment">// 加入名为 cqjtu 的 VTP 域</span></span></span><br><span class="line"><span class="number">2960B</span>(config)<span class="meta">#vtp mode client    <span class="comment">// 设置模式为 VTP 客户</span></span></span><br><span class="line"><span class="number">2960B</span>(config)<span class="meta">#int g0/1    <span class="comment">// 配置与核心交换机 3560 连接的 g0/1 千兆接口</span></span></span><br><span class="line"><span class="number">2960B</span>(config-<span class="keyword">if</span>)<span class="meta">#switchport mode trunk    <span class="comment">// 设置该接口为中继（trunk）模式</span></span></span><br><span class="line"><span class="number">2960B</span>(config-<span class="keyword">if</span>)<span class="meta">#switchport trunk allowed vlan all  <span class="comment">// 允许为所有的 VLAN 中继</span></span></span><br><span class="line"><span class="number">2960B</span>(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line"><span class="number">2960B</span>(config)<span class="meta">#int f0/1    <span class="comment">// 配置接口 1</span></span></span><br><span class="line"><span class="number">2960B</span>(config-<span class="keyword">if</span>)<span class="meta">#switchport mode access    <span class="comment">// 设置该接口为正常访问模式</span></span></span><br><span class="line"><span class="number">2960B</span>(config-<span class="keyword">if</span>)<span class="meta">#switchport access vlan 2  <span class="comment">// 将接口划分到 VLAN 2</span></span></span><br><span class="line"><span class="number">2960B</span>(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line"><span class="number">2960B</span>(config)<span class="meta">#int f0/2    <span class="comment">// 配置接口 2</span></span></span><br><span class="line"><span class="number">2960B</span>(config-<span class="keyword">if</span>)<span class="meta">#switchport mode access    <span class="comment">// 设置该接口为正常访问模式</span></span></span><br><span class="line"><span class="number">2960B</span>(config-<span class="keyword">if</span>)<span class="meta">#switchport access vlan 3  <span class="comment">// 将接口划分到 VLAN 3</span></span></span><br></pre></td></tr></table></figure><p>至此，各交换机配置完毕。</p><h3 id="📬-秘籍-6"><a href="#📬-秘籍-6" class="headerlink" title="📬 秘籍"></a>📬 秘籍</h3><blockquote><p>此时在 3 个交换机的特权模式下，都可使用<code>show vtp status</code>命令查看 <strong>VTP</strong> 状态，使用<code>show vlan</code>命令查看 <strong>VLAN</strong> 状态</p></blockquote><p>各 PC 连接的交换机和接口以及网络配置如下：<br><img src="https://img-blog.csdnimg.cn/0699ed02fcd042ac938d4338cfa4ffd9.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>至此，VTP 配置完成。同 VLAN 可以 <code>ping</code> 通，而不同 VLAN 不行（即使在同一交换机下，如从 PC0 到 PC1），且能够方便的统一规划和管理。</p><h3 id="VLAN-间的通信"><a href="#VLAN-间的通信" class="headerlink" title="VLAN 间的通信"></a>VLAN 间的通信</h3><p>VTP 只是给我们划分和管理 VLAN 提供了方便，由上面的测试得知，目前我们仍然不能在 VLAN 间通信。</p><p>因为默认的，VLAN 间是不允许进行通信，此时我们需要所谓的独臂路由器在 VLAN 间为其进行转发！</p><p>我们使用的核心交换机 3560 是个 3 层交换机，可工作在网络层，也称路由交换机，即具有路由功能，能进行这种转发操作。</p><p>3560 交换机配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3560</span>&gt;en</span><br><span class="line"><span class="number">3560</span><span class="meta">#conf t</span></span><br><span class="line"><span class="number">3560</span>(config)<span class="meta">#int g0/1    <span class="comment">// 配置连接左边 2960A 交换机的接口</span></span></span><br><span class="line"><span class="number">3560</span>(config-<span class="keyword">if</span>)<span class="meta">#switchport trunk encapsulation dot1q    <span class="comment">// 封装 VLAN 协议</span></span></span><br><span class="line"><span class="number">3560</span>(config-<span class="keyword">if</span>)<span class="meta">#switchport mode trunk     <span class="comment">// 设置为中继模式</span></span></span><br><span class="line"><span class="number">3560</span>(config-<span class="keyword">if</span>)<span class="meta">#switchport trunk allowed vlan all     <span class="comment">// 在所有 VLAN 间转发</span></span></span><br><span class="line"><span class="number">3560</span>(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line"><span class="number">3560</span>(config)<span class="meta">#int g0/2    <span class="comment">// 配置连接右边 2960B 交换机的接口</span></span></span><br><span class="line"><span class="number">3560</span>(config-<span class="keyword">if</span>)<span class="meta">#switchport trunk encapsulation dot1q    <span class="comment">//封装 VLAN 协议</span></span></span><br><span class="line"><span class="number">3560</span>(config-<span class="keyword">if</span>)<span class="meta">#switchport mode trunk     <span class="comment">// 设置为中继模式</span></span></span><br><span class="line"><span class="number">3560</span>(config-<span class="keyword">if</span>)<span class="meta">#switchport trunk allowed vlan all     <span class="comment">// 在所有 VLAN 间转发</span></span></span><br><span class="line"><span class="number">3560</span>(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line"><span class="number">3560</span>(config)<span class="meta">#ip routing    <span class="comment">// 启用路由转发功能</span></span></span><br></pre></td></tr></table></figure><p>至此，各 VLAN 中的 PC 可以正常通信。</p><h3 id="🗣-独臂路由的缺陷"><a href="#🗣-独臂路由的缺陷" class="headerlink" title="🗣 独臂路由的缺陷"></a>🗣 独臂路由的缺陷</h3><p>当使用 CPT 的模拟方式进行上面的测试时（ PC0 ping PC1），你会非常清楚的看到 ICMP 包全部都由 3560 交换机在转发，非常容易形成瓶颈。</p><p>现实中，我们一般不使用这种方式，而是真正使用其三层转发功能，即”一次路由多次交换”。</p><h2 id="DHCP、DNS及Web服务器简单配置"><a href="#DHCP、DNS及Web服务器简单配置" class="headerlink" title="DHCP、DNS及Web服务器简单配置"></a>DHCP、DNS及Web服务器简单配置</h2><p>动态主机配置 DHCP、域名解析 DNS 以及 Web 服务在日常应用中作用巨大，我们构建如下简单的拓扑来进行练习。<br><img src="https://img-blog.csdnimg.cn/714549178a7c464cbec09e5930a5b268.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_16,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>该拓扑中，服务器及客户机都连在同一交换机上。为简单起见，服务器 Server-PT 同时作为 DHCP、DNS 以及 Web 服务器，各客户机无需配置，将自动获取网络配置。</p><p>点击 CPT 拓扑图中的 Server 图标，设置其静态 IP 地址为 <code>19.89.6.4/24</code>，然后选择 <code>Service</code> 进行如下相关配置：<br><img src="https://img-blog.csdnimg.cn/9b12caee962d4836807fa13ab237b316.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_17,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="✎-试一试-1"><a href="#✎-试一试-1" class="headerlink" title="✎ 试一试"></a>✎ 试一试</h3><blockquote><p>因为我们在 DNS 服务器中把谷歌和百度的 IP 都设为了 19.89.6.4，即 Server-PT，所以，如果打开 PC0的浏览器，输入<a href="http://www.google.com/">www.google.com</a> 或<a href="http://www.baidu.com,我们都应该看到默认的/">www.baidu.com，我们都应该看到默认的</a> Server-PT 这个 Web服务器的主页。</p></blockquote><h2 id="WLAN初步配置"><a href="#WLAN初步配置" class="headerlink" title="WLAN初步配置"></a>WLAN初步配置</h2><p>WLAN 即 WiFi 当前也是广泛的应用在各种场景。</p><p>我们通过构建如下拓扑的一个家庭 WLAN 来练习一下其相关的配置：<br><img src="https://img-blog.csdnimg.cn/59c142a64c3b4d569b2df836142c337b.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_14,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="📬-秘籍-7"><a href="#📬-秘籍-7" class="headerlink" title="📬 秘籍"></a>📬 秘籍</h3><blockquote><p>笔记本及台式机默认只有有线网卡，请先关机，在关机状态下删除有线网卡，添加无线网卡，然后再开机。</p></blockquote><p>一般地，我们需要配置无线路由器的基本网络配置（IP、掩码、网关、DNS 等，现实中多为自动获取），然后再配置无线路由器的无线访问部分如连接密码及加密类型等，并开启 DHCP 功能等。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;直接连接两台-PC-构建-LAN&quot;&gt;&lt;a href=&quot;#直接连接两台-PC-构建-LAN&quot; class=&quot;headerlink&quot; title=&quot;直接连接两台 PC 构建 LAN&quot;&gt;&lt;/a&gt;直接连接两台 PC 构建 LAN&lt;/h2&gt;&lt;p&gt;将两台 PC 直接连接构成一个网络。注意：直接连接需使用交叉线。&lt;br&gt;先选择两台PC，然后连接起来，如图所示&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/0622940d7a2647868f9feda789573988.png?type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_19,color_FFFFFF,t_70,g_se,x_16#pic_center&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;br&gt;接着分别对两台PC设置IP地址。设置PC6的IP地址：192.168.0.7，PC7的IP地址：192.168.0.8.设置好ip地址之后，尝试ping一下，能ping通则成功。&lt;br&gt;先点击PC6,然后选择command&lt;/p&gt;</summary>
    
    
    
    
    <category term="计网" scheme="http://example.com/tags/%E8%AE%A1%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>Wireshark 实验</title>
    <link href="http://example.com/2021/12/22/Wireshark%E5%AE%9E%E9%AA%8C/"/>
    <id>http://example.com/2021/12/22/Wireshark%E5%AE%9E%E9%AA%8C/</id>
    <published>2021-12-22T11:30:28.950Z</published>
    <updated>2021-12-23T08:08:27.650Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>请自行查找或使用如下参考资料，了解 Wireshark 的基本使用：</p><ul><li>选择对哪块网卡进行数据包捕获</li><li>开始/停止捕获</li><li>了解 Wireshark 主要窗口区域</li><li>设置数据包的过滤</li><li>跟踪数据流<h2 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h2><h3 id="实作一-熟悉-Ethernet-帧结构"><a href="#实作一-熟悉-Ethernet-帧结构" class="headerlink" title="实作一 熟悉 Ethernet 帧结构"></a>实作一 熟悉 Ethernet 帧结构</h3>使用 Wireshark 任意进行抓包，熟悉 Ethernet 帧的结构，如：目的 MAC、源 MAC、类型、字段等<br><img src="https://img-blog.csdnimg.cn/ac298db501b44a81932e226b9ee4eebd.png#pic_center" alt="在这里插入图片描述"></li></ul><span id="more"></span><h3 id="✎-问题"><a href="#✎-问题" class="headerlink" title="✎ 问题"></a>✎ 问题</h3><p>你会发现 Wireshark 展现给我们的帧中没有校验字段，请了解一下原因。</p><p>答： Wireshark 抓取的包会自动丢弃掉校验字段</p><h3 id="实作二-了解子网内-外通信时的-MAC-地址"><a href="#实作二-了解子网内-外通信时的-MAC-地址" class="headerlink" title="实作二 了解子网内/外通信时的 MAC 地址"></a>实作二 了解子网内/外通信时的 MAC 地址</h3><p>1.ping 你旁边的计算机（同一子网），同时用 Wireshark 抓这些包（可使用 icmp 关键字进行过滤以利于分析），记录一下发出帧的目的 MAC 地址以及返回帧的源 MAC 地址是多少？这个 MAC 地址是谁的？<br><img src="https://img-blog.csdnimg.cn/66cfd64ad61a40e9ab8457068bb5f754.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/cfd9a1978434404e8b9c2dba2f03459a.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/cabdb13cdabe48d8be64a2ff11e10c0f.png#pic_center" alt="在这里插入图片描述">这个MAC地址则是我所ping的电脑的MAC地址</p><p>2.然后 ping qige.io （或者本子网外的主机都可以），同时用 Wireshark 抓这些包（可 icmp 过滤），记录一下发出帧的目的 MAC 地址以及返回帧的源 MAC 地址是多少？这个 MAC 地址是谁的？<br><img src="https://img-blog.csdnimg.cn/0adce3dbc5bd48c8bea8a908b1091659.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/0be9cab955fc45a7b0c0fcee3e5f99ae.png#pic_center" alt="在这里插入图片描述"><br>该MAC地址是子网网关的物理地址</p><p>3.再次 ping <a href="http://www.cqjtu.edu.cn/">www.cqjtu.edu.cn</a> （或者本子网外的主机都可以），同时用 Wireshark 抓这些包（可 icmp 过滤），记录一下发出帧的目的 MAC 地址以及返回帧的源 MAC 地址又是多少？这个 MAC 地址又是谁的？（我 ping 的是百度的）<br><img src="https://img-blog.csdnimg.cn/2ae408d33bac4cdfbd5285312a822a67.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/9c2bbf8bc36746b4839c0c3bc7bb75d1.png#pic_center" alt="在这里插入图片描述"></p><h3 id="✎-问题-1"><a href="#✎-问题-1" class="headerlink" title="✎ 问题"></a>✎ 问题</h3><p>通过以上的实验，你会发现：<br>访问本子网的计算机时，目的 MAC 就是该主机的<br>访问非本子网的计算机时，目的 MAC 是网关的<br>请问原因是什么？</p><p>答：原因就是子网内部的通信不需要经过网关进行，可以直接在两台主机间，而如果访问子网外的主机，就需要第一步通过网关这个出口，出到子网外。</p><h3 id="实作三-掌握-ARP-解析过程"><a href="#实作三-掌握-ARP-解析过程" class="headerlink" title="实作三 掌握 ARP 解析过程"></a>实作三 掌握 ARP 解析过程</h3><p>1.为防止干扰，先使用 arp -d * 命令清空 arp 缓存<br>2.然后 ping qige.io（或者本子网外的主机都可以），同时用Wireshark抓这些包（可arp过滤）查看这次 ARP 请求的是什么。<br><img src="https://img-blog.csdnimg.cn/21384823cd334c23ade7b08ea33e9dd3.png#pic_center" alt="在这里插入图片描述"></p><h3 id="✎-问题-2"><a href="#✎-问题-2" class="headerlink" title="✎ 问题"></a>✎ 问题</h3><p>通过以上的实验，你应该会发现，<br>1、ARP 请求都是使用广播方式发送的<br>2、如果访问的是本子网的 IP，那么 ARP 解析将直接得到该 IP 对应的 MAC；如果访问的非本子网的 IP， 那么 ARP 解析将得到网关的 MAC。<br>请问为什么？</p><p>答：当本机访问的是本子网的计算机，数据包无需离开本通信子网， ARP 解析将也是在本子网里进行，所以ARP解析得到是对方主机的MAC物理地址；<br>当本机访问的是非本子网的计算机，也就是说此时有两个不同通信子网的主机之间需要通信，数据包就需要离开本通信子网，这里就涉及到数据包在两个通信子网的传输，传输数据要离开本通信子网，ARP 解析就势必要经过网关，因此，该ARP 解析得到的目的MAC物理地址就是本网关的物理地址。</p><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><h3 id="实作一-熟悉-IP-包结构"><a href="#实作一-熟悉-IP-包结构" class="headerlink" title="实作一 熟悉 IP 包结构"></a>实作一 熟悉 IP 包结构</h3><p>使用 Wireshark 任意进行抓包（可用 ip 过滤），熟悉 IP 包的结构，如：版本、头部长度、总长度、TTL、协议类型等字段<br><img src="https://img-blog.csdnimg.cn/27150ebca2c14053959f1f65dbc0ccd6.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="✎-问题-3"><a href="#✎-问题-3" class="headerlink" title="✎ 问题"></a>✎ 问题</h3><p>为提高效率，我们应该让 IP 的头部尽可能的精简。但在如此珍贵的 IP 头部你会发现既有头部长度字段，也有总长度字段。请问为什么？<br>答：便于传输时的识别IP总长度，节省时间，当长度超过1500B时就会被返回链路层进行分段。</p><h3 id="实作二-IP-包的分段与重组"><a href="#实作二-IP-包的分段与重组" class="headerlink" title="实作二 IP 包的分段与重组"></a>实作二 IP 包的分段与重组</h3><p>根据规定，一个 IP 包最大可以有 64K 字节。但由于 Ethernet 帧的限制，当 IP 包的数据超过 1500 字节时就会被发送方的数据链路层分段，然后在接收方的网络层重组。</p><p>缺省的，ping 命令只会向对方发送 32 个字节的数据。我们可以使用 <code>ping 202.202.240.16 -l 2000</code> 命令指定要发送的数据长度。此时使用 Wireshark 抓包（用 <code>ip.addr == 202.202.240.16</code> 进行过滤），了解 IP 包如何进行分段，如：分段标志、偏移量以及每个包的大小等</p><p><img src="https://img-blog.csdnimg.cn/73b76a26865e452bbcccf0f8bb699787.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/f01c14cb183b4551b7a9223791bfddad.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/202fb8c2f2794b0ca600752cb8d78810.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="✎-问题-4"><a href="#✎-问题-4" class="headerlink" title="✎ 问题"></a>✎ 问题</h3><p>分段与重组是一个耗费资源的操作，特别是当分段由传送路径上的节点即路由器来完成的时候，所以 IPv6 已经不允许分段了。那么 IPv6 中，如果路由器遇到了一个大数据包该怎么办？</p><p>答：会直接丢弃，并返回主机发送失败的信息</p><h2 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h2><h3 id="实作一-熟悉-TCP-和-UDP-段结构"><a href="#实作一-熟悉-TCP-和-UDP-段结构" class="headerlink" title="实作一 熟悉 TCP 和 UDP 段结构"></a>实作一 熟悉 TCP 和 UDP 段结构</h3><p>1.用 Wireshark 任意抓包（可用 tcp 过滤），熟悉 TCP 段的结构，如：源端口、目的端口、序列号、确认号、各种标志位等字段<br><img src="https://img-blog.csdnimg.cn/595a682f72f44b4fa5ea4c68f3da253a.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>2.用 Wireshark 任意抓包（可用 udp 过滤），熟悉 UDP 段的结构，如：源端口、目的端口、长度等<br><img src="https://img-blog.csdnimg.cn/9e80cec4cd8b4e93a15c3554c97f5fd7.png#pic_center" alt="在这里插入图片描述"></p><h3 id="✎-问题-5"><a href="#✎-问题-5" class="headerlink" title="✎ 问题"></a>✎ 问题</h3><p>由上大家可以看到 UDP 的头部比 TCP 简单得多，但两者都有源和目的端口号。请问源和目的端口号用来干什么？</p><p>答：源端口和目的端口是用来确认某一个应用程序，IP 只到达子网网关，MAC 只到达子网下的指定主机，而端口号是达到主机上的某个应用程序。</p><h3 id="实作二-分析-TCP-建立和释放连接"><a href="#实作二-分析-TCP-建立和释放连接" class="headerlink" title="实作二 分析 TCP 建立和释放连接"></a>实作二 分析 TCP 建立和释放连接</h3><p>1.打开浏览器访问 <code>qige.io</code> 网站，用 Wireshark 抓包（可用 tcp 过滤后再使用加上 <code>Follow TCP Stream</code>），不要立即停止 Wireshark 捕获，待页面显示完毕后再多等一段时间使得能够捕获释放连接的包<br>2.请在你捕获的包中找到三次握手建立连接的包，并说明为何它们是用于建立连接的，有什么特征<br><img src="https://img-blog.csdnimg.cn/ff40242742db4fe4a2f8e12623e01795.png#pic_center" alt="在这里插入图片描述"><br>通过发出 SYN 信号请求连接，然后服务器端回应 ACK 确认收到请求，然后主机再发出一个确认信号。第一次握手时除了 SYN = 1 外其余的标志都为 0 ，第二次握手时除了 SYN = 1 且 ACK = 1 外其余的标志都为 0 ，第三次握手时除了 ACK = 1 外其余的标志都为 0。<br><img src="https://img-blog.csdnimg.cn/69e667ad07a34bbcb100ac68507ced24.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>3.请在你捕获的包中找到四次挥手释放连接的包，并说明为何它们是用于释放连接的，有什么特征<br><img src="https://img-blog.csdnimg.cn/aac40168eaed4f9593b5f73fbe38ac4c.png#pic_center" alt="在这里插入图片描述"><br>原始是将第二次、第三次挥手合并成了一个包，所以只看到了三个包。首先发出 FIN 信号请求断开，然后服务器端回应一个 ACK 确认信号，然后又发出一个 FIN 信号（这里将 ACK 和 FIN 合并成立一个包），然后主机回应一个 ACK 确认信号，即可断开连接。</p><h3 id="✎-问题一"><a href="#✎-问题一" class="headerlink" title="✎ 问题一"></a>✎ 问题一</h3><p>去掉 <code>Follow TCP Stream</code>，即不跟踪一个 TCP 流，你可能会看到访问 qige.io 时我们建立的连接有多个。请思考为什么会有多个连接？作用是什么？</p><p>答：有多个连接相当于有多个传输通道，作用是以此加快传输数据的速度。</p><h3 id="✎-问题二"><a href="#✎-问题二" class="headerlink" title="✎ 问题二"></a>✎ 问题二</h3><p>我们上面提到了释放连接需要四次挥手，有时你可能会抓到只有三次挥手。原因是什么？</p><p>答：原因是将第二次、第三次挥手发出的包（ACK 和 FIN ）合并为了一个包。</p><h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h2><h3 id="实作一-了解-DNS-解析"><a href="#实作一-了解-DNS-解析" class="headerlink" title="实作一 了解 DNS 解析"></a>实作一 了解 DNS 解析</h3><p>1.先使用 <code>ipconfig /flushdns</code> 命令清除缓存，再使用 nslookup qige.io 命令进行解析，同时用 Wireshark 任意抓包（可用 <code>dns</code> 过滤）<br><img src="https://img-blog.csdnimg.cn/418b85cf4220411295555357618011c3.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>2.你应该可以看到当前计算机使用 <code>UDP</code>，向默认的 DNS 服务器的 53 号端口发出了查询请求，而 DNS 服务器的 53 号端口返回了结果<br><img src="https://img-blog.csdnimg.cn/0239ce68df3148808e8c88d9135af29d.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/fd752df8e4ed4f61b99376f70080de4b.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="✎-问题-6"><a href="#✎-问题-6" class="headerlink" title="✎ 问题"></a>✎ 问题</h3><p>你可能会发现对同一个站点，我们发出的 DNS 解析请求不止一个，思考一下是什么原因？</p><p>答：DNS不止一个的原因可能是DNS解析过程是先从浏览器的DNS缓存中检查是否有这个网址的映射关系，如果有，就返回IP，完成域名解析；如果没有，操作系统会先检查自己本地的hosts文件是否有这个网址的映射关系，如果有，就返回IP，完成域名解析；如果还没有，电脑就要向本地DNS服务器发起请求查询域名；本地DNS服务器拿到请求后，先检查一下自己的缓存中有没有这个地址，有的话直接返回；没有的话本地DNS服务器会从配置文件中读取根DNS服务器的地址，然后向其中一台发起请求；直到获得对应的IP为止。</p><h3 id="实作二-了解-HTTP-的请求和应答"><a href="#实作二-了解-HTTP-的请求和应答" class="headerlink" title="实作二 了解 HTTP 的请求和应答"></a>实作二 了解 HTTP 的请求和应答</h3><p>1.打开浏览器访问 qige.io 网站，用 Wireshark 抓包（可用<code>http</code> 过滤再加上 <code>Follow TCP Stream</code>），不要立即停止 Wireshark 捕获，待页面显示完毕后再多等一段时间以将释放连接的包捕获<br><img src="https://img-blog.csdnimg.cn/578331629e11491a93d791ec596617ab.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>2.请在你捕获的包中找到 <code>HTTP</code> 请求包，查看请求使用的什么命令，如：<code>GET, POST</code>。并仔细了解请求的头部有哪些字段及其意义<br><img src="https://img-blog.csdnimg.cn/e0f70e1aeab54d50a90699f448efbde6.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>3.请在你捕获的包中找到 HTTP 应答包，查看应答的代码是什么，如：<code>200, 304, 404</code> 等。并仔细了解应答的头部有哪些字段及其意义<br><img src="https://img-blog.csdnimg.cn/41e1dc2a0a624d52ae1a17a06fcf6168.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>200：交易成功；<br>304：客户端已经执行了GET，但文件未变化；<br>404：没有发现文件、查询或URl；</p><h3 id="✎-问题-7"><a href="#✎-问题-7" class="headerlink" title="✎ 问题"></a>✎ 问题</h3><p>刷新一次 qige.io 网站的页面同时进行抓包，你会发现不少的 304 代码的应答，这是所请求的对象没有更改的意思，让浏览器使用本地缓存的内容即可。那么服务器为什么会回答 304 应答而不是常见的 200 应答？</p><p>答：服务器对于浏览器的第一次应答对于浏览器来说已经有了缓存，因此浏览器第二次发送请求的时候，服务器会回复浏览器上次请求的资源现在在缓存里，因此服务器根据浏览器传来的时间发现和当前请求资源的修改时间一致，应答304，表示不再重新传送资源。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;p&gt;请自行查找或使用如下参考资料，了解 Wireshark 的基本使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择对哪块网卡进行数据包捕获&lt;/li&gt;
&lt;li&gt;开始/停止捕获&lt;/li&gt;
&lt;li&gt;了解 Wireshark 主要窗口区域&lt;/li&gt;
&lt;li&gt;设置数据包的过滤&lt;/li&gt;
&lt;li&gt;跟踪数据流&lt;h2 id=&quot;数据链路层&quot;&gt;&lt;a href=&quot;#数据链路层&quot; class=&quot;headerlink&quot; title=&quot;数据链路层&quot;&gt;&lt;/a&gt;数据链路层&lt;/h2&gt;&lt;h3 id=&quot;实作一-熟悉-Ethernet-帧结构&quot;&gt;&lt;a href=&quot;#实作一-熟悉-Ethernet-帧结构&quot; class=&quot;headerlink&quot; title=&quot;实作一 熟悉 Ethernet 帧结构&quot;&gt;&lt;/a&gt;实作一 熟悉 Ethernet 帧结构&lt;/h3&gt;使用 Wireshark 任意进行抓包，熟悉 Ethernet 帧的结构，如：目的 MAC、源 MAC、类型、字段等&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/ac298db501b44a81932e226b9ee4eebd.png#pic_center&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="计网" scheme="http://example.com/tags/%E8%AE%A1%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>验证性实验</title>
    <link href="http://example.com/2021/12/22/%E9%AA%8C%E8%AF%81%E6%80%A7%E5%AE%9E%E9%AA%8C/"/>
    <id>http://example.com/2021/12/22/%E9%AA%8C%E8%AF%81%E6%80%A7%E5%AE%9E%E9%AA%8C/</id>
    <published>2021-12-22T11:02:20.935Z</published>
    <updated>2021-12-23T08:08:08.153Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ipconfig"><a href="#ipconfig" class="headerlink" title="ipconfig"></a>ipconfig</h2><h3 id="实作一"><a href="#实作一" class="headerlink" title="实作一"></a>实作一</h3><blockquote><p>ipconfig 是微软操作系统的计算机上用来控制网络连接的一个命令行工具。它的主要用来显示当前网络连接的配置信息（/all 参数）</p></blockquote><p><img src="https://img-blog.csdnimg.cn/4a602aadf1d34d06bc36c8304f299eaf.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><span id="more"></span><h3 id="✎-问题"><a href="#✎-问题" class="headerlink" title="✎ 问题"></a>✎ 问题</h3><p>你的计算机和旁边的计算机是否处于同一子网，为什么？</p><p>答：是。子网掩码是用来判断任意两台计算机的IP地址是否属于同一子网络的根据。<br>子网掩码与IP地址结构相同，是32位二进制数，其中网络号部分全为“1”和主机号部分全为“0”。利用子网掩码可以判断两台主机是否中同一子网中。若两台主机的IP地址分别与它们的子网掩码相“与”后的结果相同，则说明这两台主机在同一子网中。</p><h2 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h2><blockquote><p>PING （Packet Internet Groper），因特网包探索器，用于测试网络连接量的程序 。ping 是工作在 TCP/IP 网络体系结构中应用层的一个服务命令， 主要是向特定的目的主机发送 ICMP（Internet Control Message Protocol 因特网报文控制协议）Echo 请求报文，测试目的站是否可达及了解其有关状态。</p></blockquote><h3 id="实作一-1"><a href="#实作一-1" class="headerlink" title="实作一"></a>实作一</h3><p><img src="https://img-blog.csdnimg.cn/065765450b4e44cfbfa7ac8cba95499b.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>一共接收到了四个回复，都是 32 个字节长度的数据，与对方主机往返一次花费了 128ms ，一般情况下 TTL 都是设为 128。</p><p><strong>回显的结果包括：字节数，反应时间，TTL（生存时间）<br>TTL是 Time To Live的缩写，该字段指定IP包被路由器丢弃之前允许通过的最大网段数量。TTL是IPv4报头的一个8 bit字段。</strong></p><h3 id="实作二"><a href="#实作二" class="headerlink" title="实作二"></a>实作二</h3><p>使用 ping/? 命令了解该命令的各种选项并实际使用。<br><img src="https://img-blog.csdnimg.cn/c2eb89c1899c4ac6b4a5af48866b2693.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="✎问题"><a href="#✎问题" class="headerlink" title="✎问题"></a>✎问题</h3><p>假设你不能 ping 通某计算机或 IP，但你确定该计算机和你之间的网络是连通的，那么可能的原因是什么？该如何处理能保证 ping 通？</p><p>答：可能是自己的网络出现故障不能访问某计算机，我们一般可采用由近及远的连通性测试来确定问题所在。</p><h2 id="tracert"><a href="#tracert" class="headerlink" title="tracert"></a>tracert</h2><blockquote><p>TRACERT (Trace Route 的组合缩写)，也称为路由追踪，该命令行程序可用于跟踪 Internet 协议 （IP） 数据包传送到目标地址时经过的路径。</p></blockquote><h3 id="实作一-2"><a href="#实作一-2" class="headerlink" title="实作一"></a>实作一</h3><p>要了解到某计算机如 <a href="http://www.baidu.com/">www.baidu.com</a> 中间经过了哪些节点（路由器）及其它状态，可使用 tracert <a href="http://www.baidu.com/">www.baidu.com</a> 命令，查看反馈的信息，了解节点的个数。<br><img src="https://img-blog.csdnimg.cn/2261921fb9cf4508bcae5f2b9fe2de27.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>可通过网站 <a href="http://ip.cn/">http://ip.cn</a> 查看这些节点位于何处，是哪个公司的，大致清楚本机到百度服务器之间的路径。<br><img src="https://img-blog.csdnimg.cn/fe6e02aad4c54ce8ada2d2685fa8caf0.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/3dbc2ffa990d4fea8f1c826fb87dac21.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2e4f06e9988e40cca15956a19c29c351.png#pic_center" alt="在这里插入图片描述"></p><h3 id="实作二-1"><a href="#实作二-1" class="headerlink" title="实作二"></a>实作二</h3><p>ping.pe 这个网站可以探测从全球主要的 ISP 到某站点如 <a href="https://qige.io/">https://qige.io</a> 的线路状态，当然也包括各线路到该主机的路由情况。请使用浏览器访问 <a href="http://ping.pe/qige.io">http://ping.pe/qige.io</a> 进行了解。<br><img src="https://img-blog.csdnimg.cn/795296789ca44802baada321d65a6562.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="✎问题一"><a href="#✎问题一" class="headerlink" title="✎问题一"></a>✎问题一</h3><p>tracert 能告诉我们路径上的节点以及大致的延迟等信息，那么它背后的原理是什么？本问题可结合第二部分的 Wireshark 实验进行验证。</p><p>答：通过向目标发送不同IP生存时间 (TTL) 值的“Internet控制消息协议(ICMP)”回应数据包，Tracert诊断程序确定到目标所采取的路由。要求路径上的每个路由器在转发数据包之前至少将数据包上的 TTL 递减1。数据包上的 TTL 减为 0 时，路由器应该将“ICMP 已超时”的消息发回源系统。 Tracert 先发送 TTL 为 1的回应数据包，并在随后的每次发送过程将TTL递增 1，直到目标响应或 TTL 达到最大值，从而确定路由。通过检查中间路由器发回的“ICMP已超时”的消息确定路由。某些路由器不经询问直接丢弃 TTL 过期的数据包，这在 Tracert 实用程序中看不到。</p><h3 id="✎问题二"><a href="#✎问题二" class="headerlink" title="✎问题二"></a>✎问题二</h3><p>在以上两个实作中，如果你留意路径中的节点，你会发现无论是访问百度还是棋歌教学网，路径中的第一跳都是相同的，甚至你应该发现似乎前几个节点都是相同的，你的解释是什么？</p><p>答：主机的测试数据会送到网关，然后才能访问外网，有多个网关的情况下，就会出现前几个结点都是相同的。</p><h3 id="✎问题三"><a href="#✎问题三" class="headerlink" title="✎问题三"></a>✎问题三</h3><p>在追踪过程中，你可能会看到路径中某些节点显示为 * 号，这是发生了什么？</p><p>答：没有出现具体的信息反馈，请求超时</p><h3 id="📬-秘籍"><a href="#📬-秘籍" class="headerlink" title="📬 秘籍"></a>📬 秘籍</h3><p>如果你使用 Linux 系统，那么应该用过其下的 My Trace Route 即 mtr 命令。<br>该命令的速度比 Windows 平台下的 tracert 快多了。为此，有人也开发了 Windows下的 命令，你可以试一试。其次还可以试试<br>另外，提供一个全球地图，可视化的显示追踪路径也值得你前往（因为使用了 Google 地图，需要科学上网）</p><h2 id="ARP"><a href="#ARP" class="headerlink" title="ARP"></a>ARP</h2><blockquote><p>ARP（Address Resolution Protocol）即地址解析协议，是用于根据给定网络层地址即 IP 地址，查找并得到其对应的数据链路层地址即 MAC地址的协议。 ARP 协议定义在 1982 年的 RFC 826</p></blockquote><h3 id="实作一-3"><a href="#实作一-3" class="headerlink" title="实作一"></a>实作一</h3><p>运行 arp -a 命令查看当前的 arp 缓存， 请留意缓存了些什么<br><img src="https://img-blog.csdnimg.cn/a666c0fed59e44a8915a4a4c80d61717.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_18,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="实作二-2"><a href="#实作二-2" class="headerlink" title="实作二"></a>实作二</h3><p>请使用 arp /? 命令了解该命令的各种选项。<br><img src="https://img-blog.csdnimg.cn/837db25b4fea4d8e82a058d0684a7ba0.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_19,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="✎问题-1"><a href="#✎问题-1" class="headerlink" title="✎问题"></a>✎问题</h3><p>在实作三中，为何缓存中常常有网关的信息？</p><p>答：因为在对外传输数据的时候，会将经过的网关信息存储在缓存中，方便下次使用。<br>我们将网关或其它计算机的 arp 信息设置为静态有什么优缺点？<br>优点：利于管理，同时将 IP-MAC 绑定可以有效的防治 ARP 欺骗，并且可以免除用户进行身份认证的繁琐操作；<br>缺点：不利于维护 arp 列表，维护起来麻烦，倘若有人冒充其中一个 IP ，对用户的安全会造成极大的隐患。</p><h2 id="DHCP"><a href="#DHCP" class="headerlink" title="DHCP"></a>DHCP</h2><blockquote><p>DHCP（Dynamic Host Configuration Protocol）即动态主机配置协议，是一个用于 IP 网络的网络协议，位于 OSI 模型的应用层，使用 UDP 协议工作，主要有两个用途：<br>1、用于内部网或网络服务供应商自动分配 IP 地址给用户<br>2、用于内部网管理员对所有电脑作中央管理<br>简单的说，DHCP 可以让计算机自动获取/释放网络配置</p></blockquote><h3 id="实作一-4"><a href="#实作一-4" class="headerlink" title="实作一"></a>实作一</h3><p>一般地，我们自动获取的网络配置信息包括：IP 地址、子网掩码、网关 IP 以及 DNS 服务器 IP 等。使用 ipconfig/release 命令释放自动获取的网络配置，并用 ipconfig/renew 命令重新获取，了解 DHCP 工作过程和原理</p><p><img src="https://img-blog.csdnimg.cn/878a5576f6814f01b49e5e4fd974267c.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/c49b5ab54d514c90ad24c101398cb6fb.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="✎问题-2"><a href="#✎问题-2" class="headerlink" title="✎问题"></a>✎问题</h3><p>如果你没能成功的释放，请思考有哪些可能的原因并着手进行解决？</p><p>答：可能没有开启DHCP客户端服务；解决方法：在 “ 运行 ” 中输入 “ <code>sc config DHCP start= AUTO</code> ” 重启后就OK 了</p><h3 id="📬-秘籍-1"><a href="#📬-秘籍-1" class="headerlink" title="📬 秘籍"></a>📬 秘籍</h3><p>在我校不少地方如教室，计算机都采用了 DHCP 来获得网络配置。假如某天因 DHCP 服务器问题从而不能获得网络配置，那么我们可以查看隔壁教室计算机的配置信息来手动进行网络配置，从而使该计算机能够接入 Internet。<br>经常的，在一个固定地方的网络配置我都喜欢采用 静态/手动配置，而不是动态 DHCP 来进行。你能想到是什么原因吗？</p><p>答： IP 有限且主机较多，设置静态配置，避免IP被新接入的主机抢占 。</p><h2 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h2><blockquote><p>无论是使用 TCP 还是 UDP，任何一个网络服务都与特定的端口（Port Number）关联在一起。因此，每个端口都对应于某个通信协议/服务。<br>netstat（Network Statistics）是在内核中访问网络连接状态及其相关信息的命令行程序，可以显示路由表、实际的网络连接和网络接口设备的状态信息，以及与 IP、TCP、UDP 和 ICMP 协议相关的统计数据，一般用于检验本机各端口的网络服务运行状况</p></blockquote><h3 id="实作一-5"><a href="#实作一-5" class="headerlink" title="实作一"></a>实作一</h3><p>Windows 系统将一些常用的端口与服务记录在 C:\Windows\System32\drivers\etc\services 文件中，请查看该文件了解常用的端口号分配<br><img src="https://img-blog.csdnimg.cn/ee268285a289427db83728e19e615f2b.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="实作二-3"><a href="#实作二-3" class="headerlink" title="实作二"></a>实作二</h3><p>使用 netstat -an 命令，查看计算机当前的网络连接状况。更多的 netstat 命令选项，可参考上面链接 4 和 5<br><img src="https://img-blog.csdnimg.cn/aa454295eefc45aab21d9419223c3567.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="📬-秘籍-2"><a href="#📬-秘籍-2" class="headerlink" title="📬 秘籍"></a>📬 秘籍</h3><p>打开的计算机端口，就是向 Internet 打开的一个通道。通过 netstat 命令，我们可以了解当前计算机哪些端口是打开的，从而找出一些恶意后台程序，分析其所作所为，并且可以进一步将相关端口关闭，降低安全风险</p><h2 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h2><blockquote><p>DNS（Domain Name System）即域名系统，是互联网的一项服务。它作为将域名和 IP 地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS 使用 TCP 和 UDP 的 53 号端口</p></blockquote><h3 id="实作一-6"><a href="#实作一-6" class="headerlink" title="实作一"></a>实作一</h3><p>Windows 系统将一些固定的/静态的 DNS 信息记录在 C:\Windows\System32\drivers\etc\hosts 文件中，如我们常用的 localhost 就对应 127.0.0.1 。请查看该文件看看有什么记录在该文件中<br><img src="https://img-blog.csdnimg.cn/eea88ff50dd7429e93366109ae63e46b.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="实作二-4"><a href="#实作二-4" class="headerlink" title="实作二"></a>实作二</h3><p>解析过的 DNS 记录将会被缓存，以利于加快解析速度。请使用 ipconfig /displaydns 命令查看。我们也可以使用 ipconfig /flushdns 命令来清除所有的 DNS 缓存<br><img src="https://img-blog.csdnimg.cn/895e52c4a244409bb0d7590eddd5e349.png?x-oss-process=im,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="📬-秘籍-3"><a href="#📬-秘籍-3" class="headerlink" title="📬 秘籍"></a>📬 秘籍</h3><p>当我们使用浏览器上网时，或多或少的会看到一些广告。某些网站的广告是非常没有节操的，所以我们一般可以通过安装浏览器插件如 AdGuard、AdBlocker 等来拦截和过滤。<br>这种方法简单方便有效，不过有一定安全或隐私问题，因为该插件实时知道你访问的 URL。<br>假设不使用这种第三方的插件，希望自己完全控制，那么就请考虑在我们前面提到的 hosts 文件中添加 DNS 记录。有自愿者时时在维护全球正确的 DNS 记录文件 hosts-1 hosts-2</p><h3 id="✎问题-3"><a href="#✎问题-3" class="headerlink" title="✎问题"></a>✎问题</h3><p>上面秘籍中我们提到了使用插件或自己修改 hosts 文件来屏蔽广告，思考一下这种方式为何能过滤广告？如果某些广告拦截失效，那么是什么原因？你应该怎样进行分析从而能够成功屏蔽它？</p><p>答：通过将 127.0.0.1 广告链接设置为广告推送链接，从而广告链接就不放访问到本机，而是它自己的服务器；广告拦截失效是因为有个跨服务器访问问题；可以使用 adsafe——广告管家 解决这个跨服务器访问的问题</p><h2 id="cache"><a href="#cache" class="headerlink" title="cache"></a>cache</h2><blockquote><p>cache 即缓存，是 IT 领域一个重要的技术。我们此处提到的 cache 主要是浏览器缓存。<br>浏览器缓存是根据 HTTP 报文的缓存标识进行的，是性能优化中简单高效的一种优化方式了。一个优秀的缓存策略可以缩短网页请求资源的距离，减少延迟，并且由于缓存文件可以重复利用，还可以减少带宽，降低网络负荷</p></blockquote><h3 id="实作一-7"><a href="#实作一-7" class="headerlink" title="实作一"></a>实作一</h3><p>打开 Chrome 或 Firefox 浏览器，访问 <a href="https://qige.io/">https://qige.io</a> ，接下来敲 F12 键 或 Ctrl + Shift + I 组合键打开开发者工具，选择 Network 面板后刷新页面，你会在开发者工具底部看到加载该页面花费的时间。请进一步查看哪些文件被 cache了，哪些没有<br><img src="https://img-blog.csdnimg.cn/dd81a3fa19154a9cb5f350c6b857a2c9.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="实作二-5"><a href="#实作二-5" class="headerlink" title="实作二"></a>实作二</h3><p>接下来仍在 Network 面板，选择 Disable cache 选项框，表明当前不使用 cache，页面数据全部来自于 Internet，刷新页面，再次在开发者工具底部查看加载该页面花费的时间。你可比对与有 cache 时的加载速度差异<br><img src="https://img-blog.csdnimg.cn/e370f6a0795a47648cf9593ce0a4de4d.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="📬-秘籍-4"><a href="#📬-秘籍-4" class="headerlink" title="📬 秘籍"></a>📬 秘籍</h3><p>你的计算机可能还在使用 XX 管家，XX 卫士之类的垃圾软件，那么它可能就会在某些时候提示你计算机的垃圾文件有多少多少，请清理（其实是它本身应该被清理！）之类的弹窗。如果你查看一下它判断的所谓垃圾文件，你会发现大多都是浏览器的缓存，而你已经明白了这些缓存文件的作用。所以，最好是不要清理。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;ipconfig&quot;&gt;&lt;a href=&quot;#ipconfig&quot; class=&quot;headerlink&quot; title=&quot;ipconfig&quot;&gt;&lt;/a&gt;ipconfig&lt;/h2&gt;&lt;h3 id=&quot;实作一&quot;&gt;&lt;a href=&quot;#实作一&quot; class=&quot;headerlink&quot; title=&quot;实作一&quot;&gt;&lt;/a&gt;实作一&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;ipconfig 是微软操作系统的计算机上用来控制网络连接的一个命令行工具。它的主要用来显示当前网络连接的配置信息（/all 参数）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/4a602aadf1d34d06bc36c8304f299eaf.png?,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ2hhcm9uZG93bg==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="计网" scheme="http://example.com/tags/%E8%AE%A1%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>随想</title>
    <link href="http://example.com/2021/07/22/%E9%9A%8F%E6%83%B3/"/>
    <id>http://example.com/2021/07/22/%E9%9A%8F%E6%83%B3/</id>
    <published>2021-07-22T06:12:35.932Z</published>
    <updated>2021-12-22T11:00:20.390Z</updated>
    
    <content type="html"><![CDATA[<h1>学习是一场需要不断克服自己内心不同欲望的修行。</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;学习是一场需要不断克服自己内心不同欲望的修行。&lt;/h1&gt;</summary>
      
    
    
    
    
    <category term="杂谈" scheme="http://example.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
</feed>
